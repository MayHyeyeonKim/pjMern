{"ast":null,"code":"var _jsxFileName = \"/Users/hyeyeonkim/Desktop/pj_mern/client/src/Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test(props) {\n  _s();\n  const [Content, setContent] = useState(\"\");\n  const onSubmit = () => {\n    alert();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: Content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onSubmit();\n      },\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"v3wVm9Mpl9wjDUy8jyiVh7HeOGw=\");\n_c = Test;\nexport default Test;\n\n/* <div style={{ color: \"yellow\" }}>\n      <h1 className=\"test\">\n        Test 컴포넌트 입니다\n        <br />\n        {Temp}\n        {Arr.map((ele, idx) => {\n          return (\n            <div key={idx}>\n              <p>{ele}</p>\n              <p>{idx}</p>\n            </div>\n          );\n        })}\n      </h1>\n    </div> */\n\n// useState 배열이 올 때\n\n// function Test(_props) {\n//     const [Temp, setTemp] = useState([]);\n//     const [Number, setNumber] = useState(0);\n//     return (\n//       <>\n//         <h1 className=\"test\"> Test component!</h1>\n//         <p>버튼을 눌러봐</p>\n//         {Temp.map((ele, idx) => {\n//           return <p key={idx}>{ele}</p>;\n//         })}\n//         <button\n//           onClick={() => {\n//             let arr = []; //빈배열 arr을 선언\n//             arr = [...Temp]; //스프레드신택스 사용해서 복사 -> arr배열에 할당 (arr배열은 Temp배열의 요소 가지게 됨)\n//             arr.push(Number); //Number변수를 arr에 추가\n//             setNumber(Number + 1); //1씩 증가하게 상태없뎃\n//             setTemp([...arr]); //여기 arr이 와도 되던데...\n//           }}\n//         >\n//           증가\n//         </button>\n//       </>\n//     );\n//   }\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Test","props","_s","Content","setContent","onSubmit","alert","style","display","flexDirection","alignItems","children","type","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Users/hyeyeonkim/Desktop/pj_mern/client/src/Test.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Test(props) {\n  const [Content, setContent] = useState(\"\");\n\n  const onSubmit = () => {\n    alert();\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n      }}\n    >\n      <input type=\"text\" value={Content} />\n      <button\n        onClick={() => {\n          onSubmit();\n        }}\n        style={{ marginTop: \"1rem\" }}\n      >\n        Submit\n      </button>\n    </div>\n  );\n}\nexport default Test;\n\n/* <div style={{ color: \"yellow\" }}>\n      <h1 className=\"test\">\n        Test 컴포넌트 입니다\n        <br />\n        {Temp}\n        {Arr.map((ele, idx) => {\n          return (\n            <div key={idx}>\n              <p>{ele}</p>\n              <p>{idx}</p>\n            </div>\n          );\n        })}\n      </h1>\n    </div> */\n\n// useState 배열이 올 때\n\n// function Test(_props) {\n//     const [Temp, setTemp] = useState([]);\n//     const [Number, setNumber] = useState(0);\n//     return (\n//       <>\n//         <h1 className=\"test\"> Test component!</h1>\n//         <p>버튼을 눌러봐</p>\n//         {Temp.map((ele, idx) => {\n//           return <p key={idx}>{ele}</p>;\n//         })}\n//         <button\n//           onClick={() => {\n//             let arr = []; //빈배열 arr을 선언\n//             arr = [...Temp]; //스프레드신택스 사용해서 복사 -> arr배열에 할당 (arr배열은 Temp배열의 요소 가지게 됨)\n//             arr.push(Number); //Number변수를 arr에 추가\n//             setNumber(Number + 1); //1씩 증가하게 상태없뎃\n//             setTemp([...arr]); //여기 arr이 와도 되던데...\n//           }}\n//         >\n//           증가\n//         </button>\n//       </>\n//     );\n//   }\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;IACrBC,KAAK,CAAC,CAAC;EACT,CAAC;EACD,oBACEP,OAAA;IACEQ,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,gBAEFZ,OAAA;MAAOa,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEV;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrClB,OAAA;MACEmB,OAAO,EAAEA,CAAA,KAAM;QACbb,QAAQ,CAAC,CAAC;MACZ,CAAE;MACFE,KAAK,EAAE;QAAEY,SAAS,EAAE;MAAO,CAAE;MAAAR,QAAA,EAC9B;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACf,EAAA,CAzBQF,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AA0Bb,eAAeA,IAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}