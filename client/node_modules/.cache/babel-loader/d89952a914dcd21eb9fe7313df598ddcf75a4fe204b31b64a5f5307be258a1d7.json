{"ast":null,"code":"var _jsxFileName = \"/Users/hyeyeonkim/Desktop/pj_mern/client/src/Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Test() {\n  _s();\n  const [Content, setContent] = useState(\"\");\n  const [ContentList, setContentList] = useState([]);\n  const onSubmit = () => {\n    let TempArr = [...ContentList];\n    TempArr.push(Content);\n    setContentList([...TempArr]);\n    setContent(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      width: \"100%\"\n    },\n    children: [ContentList.map((content, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        marginLeft: \"1rem\"\n      },\n      children: [\"\\uB0B4\\uC6A9: \", content, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: Content,\n      onChange: e => {\n        setContent(e.currentTarget.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        onSubmit();\n      },\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"QyAvavQEA/IRx0gQ7OlEDM0fG8Q=\");\n_c = Test;\nexport default Test;\n\n/* <div style={{ color: \"yellow\" }}>\n      <h1 className=\"test\">\n        Test 컴포넌트 입니다\n        <br />\n        {Temp}\n        {Arr.map((ele, idx) => {\n          return (\n            <div key={idx}>\n              <p>{ele}</p>\n              <p>{idx}</p>\n            </div>\n          );\n        })}\n      </h1>\n    </div> */\n\n// useState 배열이 올 때\n\n// function Test(_props) {\n//     const [Temp, setTemp] = useState([]);\n//     const [Number, setNumber] = useState(0);\n//     return (\n//       <>\n//         <h1 className=\"test\"> Test component!</h1>\n//         <p>버튼을 눌러봐</p>\n//         {Temp.map((ele, idx) => {\n//           return <p key={idx}>{ele}</p>;\n//         })}\n//         <button\n//           onClick={() => {\n//             let arr = []; //빈배열 arr을 선언\n//             arr = [...Temp]; //스프레드신택스 사용해서 복사 -> arr배열에 할당 (arr배열은 Temp배열의 요소 가지게 됨)\n//             arr.push(Number); //Number변수를 arr에 추가\n//             setNumber(Number + 1); //1씩 증가하게 상태없뎃\n//             setTemp([...arr]); //여기 arr이 와도 되던데...\n//           }}\n//         >\n//           증가\n//         </button>\n//       </>\n//     );\n//   }\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Test","_s","Content","setContent","ContentList","setContentList","onSubmit","TempArr","push","style","display","flexDirection","alignItems","width","children","map","content","idx","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","currentTarget","onClick","marginTop","_c","$RefreshReg$"],"sources":["/Users/hyeyeonkim/Desktop/pj_mern/client/src/Test.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Test() {\n  const [Content, setContent] = useState(\"\");\n  const [ContentList, setContentList] = useState([]);\n\n  const onSubmit = () => {\n    let TempArr = [...ContentList];\n    TempArr.push(Content);\n    setContentList([...TempArr]);\n    setContent(\"\");\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        width: \"100%\",\n      }}\n    >\n      {ContentList.map((content, idx) => (\n        <div\n          key={idx}\n          style={{\n            width: \"100%\",\n            marginLeft: \"1rem\",\n          }}\n        >\n          내용: {content}\n          <hr />\n        </div>\n      ))}\n      <input\n        type=\"text\"\n        value={Content}\n        onChange={(e) => {\n          setContent(e.currentTarget.value);\n        }}\n      />\n      <button\n        onClick={() => {\n          onSubmit();\n        }}\n        style={{ marginTop: \"1rem\" }}\n      >\n        Submit\n      </button>\n    </div>\n  );\n}\nexport default Test;\n\n/* <div style={{ color: \"yellow\" }}>\n      <h1 className=\"test\">\n        Test 컴포넌트 입니다\n        <br />\n        {Temp}\n        {Arr.map((ele, idx) => {\n          return (\n            <div key={idx}>\n              <p>{ele}</p>\n              <p>{idx}</p>\n            </div>\n          );\n        })}\n      </h1>\n    </div> */\n\n// useState 배열이 올 때\n\n// function Test(_props) {\n//     const [Temp, setTemp] = useState([]);\n//     const [Number, setNumber] = useState(0);\n//     return (\n//       <>\n//         <h1 className=\"test\"> Test component!</h1>\n//         <p>버튼을 눌러봐</p>\n//         {Temp.map((ele, idx) => {\n//           return <p key={idx}>{ele}</p>;\n//         })}\n//         <button\n//           onClick={() => {\n//             let arr = []; //빈배열 arr을 선언\n//             arr = [...Temp]; //스프레드신택스 사용해서 복사 -> arr배열에 할당 (arr배열은 Temp배열의 요소 가지게 됨)\n//             arr.push(Number); //Number변수를 arr에 추가\n//             setNumber(Number + 1); //1씩 증가하게 상태없뎃\n//             setTemp([...arr]); //여기 arr이 와도 되던데...\n//           }}\n//         >\n//           증가\n//         </button>\n//       </>\n//     );\n//   }\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMS,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIC,OAAO,GAAG,CAAC,GAAGH,WAAW,CAAC;IAC9BG,OAAO,CAACC,IAAI,CAACN,OAAO,CAAC;IACrBG,cAAc,CAAC,CAAC,GAAGE,OAAO,CAAC,CAAC;IAC5BJ,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEJ,OAAA;IACEU,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,QAAQ;MACpBC,KAAK,EAAE;IACT,CAAE;IAAAC,QAAA,GAEDV,WAAW,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,GAAG,kBAC5BlB,OAAA;MAEEU,KAAK,EAAE;QACLI,KAAK,EAAE,MAAM;QACbK,UAAU,EAAE;MACd,CAAE;MAAAJ,QAAA,GACH,gBACK,EAACE,OAAO,eACZjB,OAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GAPDL,GAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQL,CACN,CAAC,eACFvB,OAAA;MACEwB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEtB,OAAQ;MACfuB,QAAQ,EAAGC,CAAC,IAAK;QACfvB,UAAU,CAACuB,CAAC,CAACC,aAAa,CAACH,KAAK,CAAC;MACnC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFvB,OAAA;MACE6B,OAAO,EAAEA,CAAA,KAAM;QACbtB,QAAQ,CAAC,CAAC;MACZ,CAAE;MACFG,KAAK,EAAE;QAAEoB,SAAS,EAAE;MAAO,CAAE;MAAAf,QAAA,EAC9B;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACrB,EAAA,CAjDQD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAkDb,eAAeA,IAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}