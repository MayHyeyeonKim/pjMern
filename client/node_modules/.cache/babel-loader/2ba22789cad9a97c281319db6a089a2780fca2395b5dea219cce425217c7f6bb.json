{"ast":null,"code":"import _toConsumableArray from\"/Users/hyeyeonkim/Desktop/pj_mern/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/hyeyeonkim/Desktop/pj_mern/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Test(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),Content=_useState2[0],setContent=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),ContentList=_useState4[0],setContentList=_useState4[1];var onSubmit=function onSubmit(){var TempArr=_toConsumableArray(ContentList);TempArr.push(Content);setContentList(_toConsumableArray(TempArr));setContent(\"\");};return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",width:\"100%\"},children:[ContentList.map(function(content,idx){return/*#__PURE__*/_jsxs(\"div\",{style:{width:\"100%\",marginLeft:\"1rem\"},children:[\"\\uB0B4\\uC6A9: \",content,/*#__PURE__*/_jsx(\"hr\",{})]},idx);}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:Content,onChange:function onChange(e){setContent(e.currentTarget.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){onSubmit();},style:{marginTop:\"1rem\"},children:\"Submit\"})]});}export default Test;/* <div style={{ color: \"yellow\" }}>\n      <h1 className=\"test\">\n        Test 컴포넌트 입니다\n        <br />\n        {Temp}\n        {Arr.map((ele, idx) => {\n          return (\n            <div key={idx}>\n              <p>{ele}</p>\n              <p>{idx}</p>\n            </div>\n          );\n        })}\n      </h1>\n    </div> */ // useState 배열이 올 때\n// function Test(_props) {\n//     const [Temp, setTemp] = useState([]);\n//     const [Number, setNumber] = useState(0);\n//     return (\n//       <>\n//         <h1 className=\"test\"> Test component!</h1>\n//         <p>버튼을 눌러봐</p>\n//         {Temp.map((ele, idx) => {\n//           return <p key={idx}>{ele}</p>;\n//         })}\n//         <button\n//           onClick={() => {\n//             let arr = []; //빈배열 arr을 선언\n//             arr = [...Temp]; //스프레드신택스 사용해서 복사 -> arr배열에 할당 (arr배열은 Temp배열의 요소 가지게 됨)\n//             arr.push(Number); //Number변수를 arr에 추가\n//             setNumber(Number + 1); //1씩 증가하게 상태없뎃\n//             setTemp([...arr]); //여기 arr이 와도 되던데...\n//           }}\n//         >\n//           증가\n//         </button>\n//       </>\n//     );\n//   }","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Test","_useState","_useState2","_slicedToArray","Content","setContent","_useState3","_useState4","ContentList","setContentList","onSubmit","TempArr","_toConsumableArray","push","style","display","flexDirection","alignItems","width","children","map","content","idx","marginLeft","type","value","onChange","e","currentTarget","onClick","marginTop"],"sources":["/Users/hyeyeonkim/Desktop/pj_mern/client/src/Test.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Test() {\n  const [Content, setContent] = useState(\"\");\n  const [ContentList, setContentList] = useState([]);\n\n  const onSubmit = () => {\n    let TempArr = [...ContentList];\n    TempArr.push(Content);\n    setContentList([...TempArr]);\n    setContent(\"\");\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        width: \"100%\",\n      }}\n    >\n      {ContentList.map((content, idx) => (\n        <div\n          key={idx}\n          style={{\n            width: \"100%\",\n            marginLeft: \"1rem\",\n          }}\n        >\n          내용: {content}\n          <hr />\n        </div>\n      ))}\n      <input\n        type=\"text\"\n        value={Content}\n        onChange={(e) => {\n          setContent(e.currentTarget.value);\n        }}\n      />\n      <button\n        onClick={() => {\n          onSubmit();\n        }}\n        style={{ marginTop: \"1rem\" }}\n      >\n        Submit\n      </button>\n    </div>\n  );\n}\nexport default Test;\n\n/* <div style={{ color: \"yellow\" }}>\n      <h1 className=\"test\">\n        Test 컴포넌트 입니다\n        <br />\n        {Temp}\n        {Arr.map((ele, idx) => {\n          return (\n            <div key={idx}>\n              <p>{ele}</p>\n              <p>{idx}</p>\n            </div>\n          );\n        })}\n      </h1>\n    </div> */\n\n// useState 배열이 올 때\n\n// function Test(_props) {\n//     const [Temp, setTemp] = useState([]);\n//     const [Number, setNumber] = useState(0);\n//     return (\n//       <>\n//         <h1 className=\"test\"> Test component!</h1>\n//         <p>버튼을 눌러봐</p>\n//         {Temp.map((ele, idx) => {\n//           return <p key={idx}>{ele}</p>;\n//         })}\n//         <button\n//           onClick={() => {\n//             let arr = []; //빈배열 arr을 선언\n//             arr = [...Temp]; //스프레드신택스 사용해서 복사 -> arr배열에 할당 (arr배열은 Temp배열의 요소 가지게 됨)\n//             arr.push(Number); //Number변수를 arr에 추가\n//             setNumber(Number + 1); //1씩 증가하게 상태없뎃\n//             setTemp([...arr]); //여기 arr이 와도 되던데...\n//           }}\n//         >\n//           증가\n//         </button>\n//       </>\n//     );\n//   }\n"],"mappings":"oQAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACd,IAAAC,SAAA,CAA8BN,QAAQ,CAAC,EAAE,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAnCG,OAAO,CAAAF,UAAA,IAAEG,UAAU,CAAAH,UAAA,IAC1B,IAAAI,UAAA,CAAsCX,QAAQ,CAAC,EAAE,CAAC,CAAAY,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA3CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAElC,GAAM,CAAAG,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CACrB,GAAI,CAAAC,OAAO,CAAAC,kBAAA,CAAOJ,WAAW,CAAC,CAC9BG,OAAO,CAACE,IAAI,CAACT,OAAO,CAAC,CACrBK,cAAc,CAAAG,kBAAA,CAAKD,OAAO,CAAC,CAAC,CAC5BN,UAAU,CAAC,EAAE,CAAC,CAChB,CAAC,CAED,mBACEN,KAAA,QACEe,KAAK,CAAE,CACLC,OAAO,CAAE,MAAM,CACfC,aAAa,CAAE,QAAQ,CACvBC,UAAU,CAAE,QAAQ,CACpBC,KAAK,CAAE,MACT,CAAE,CAAAC,QAAA,EAEDX,WAAW,CAACY,GAAG,CAAC,SAACC,OAAO,CAAEC,GAAG,qBAC5BvB,KAAA,QAEEe,KAAK,CAAE,CACLI,KAAK,CAAE,MAAM,CACbK,UAAU,CAAE,MACd,CAAE,CAAAJ,QAAA,EACH,gBACK,CAACE,OAAO,cACZxB,IAAA,QAAK,CAAC,GAPDyB,GAQF,CAAC,EACP,CAAC,cACFzB,IAAA,UACE2B,IAAI,CAAC,MAAM,CACXC,KAAK,CAAErB,OAAQ,CACfsB,QAAQ,CAAE,SAAAA,SAACC,CAAC,CAAK,CACftB,UAAU,CAACsB,CAAC,CAACC,aAAa,CAACH,KAAK,CAAC,CACnC,CAAE,CACH,CAAC,cACF5B,IAAA,WACEgC,OAAO,CAAE,SAAAA,QAAA,CAAM,CACbnB,QAAQ,CAAC,CAAC,CACZ,CAAE,CACFI,KAAK,CAAE,CAAEgB,SAAS,CAAE,MAAO,CAAE,CAAAX,QAAA,CAC9B,QAED,CAAQ,CAAC,EACN,CAAC,CAEV,CACA,cAAe,CAAAnB,IAAI,CAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAdA,CAgBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}